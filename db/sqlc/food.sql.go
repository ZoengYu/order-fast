// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: food.sql

package db

import (
	"context"
)

const addMenuFood = `-- name: AddMenuFood :one
INSERT INTO food (
	menu_id,
	food_name
) VALUES (
	$1, $2
) RETURNING id, menu_id, food_name
`

type AddMenuFoodParams struct {
	MenuID   int64  `json:"menu_id"`
	FoodName string `json:"food_name"`
}

func (q *Queries) AddMenuFood(ctx context.Context, arg AddMenuFoodParams) (Food, error) {
	row := q.db.QueryRowContext(ctx, addMenuFood, arg.MenuID, arg.FoodName)
	var i Food
	err := row.Scan(&i.ID, &i.MenuID, &i.FoodName)
	return i, err
}

const getMenuFood = `-- name: GetMenuFood :one
SELECT id, menu_id, food_name FROM food
WHERE menu_id = $1 AND food_name = $2
`

type GetMenuFoodParams struct {
	MenuID   int64  `json:"menu_id"`
	FoodName string `json:"food_name"`
}

func (q *Queries) GetMenuFood(ctx context.Context, arg GetMenuFoodParams) (Food, error) {
	row := q.db.QueryRowContext(ctx, getMenuFood, arg.MenuID, arg.FoodName)
	var i Food
	err := row.Scan(&i.ID, &i.MenuID, &i.FoodName)
	return i, err
}
