// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: food_tag.sql

package db

import (
	"context"
)

const getMenuFoodTag = `-- name: GetMenuFoodTag :one
SELECT id, menu_food_id, food_tag FROM food_tag
WHERE menu_food_id = $1 AND food_tag = $2
`

type GetMenuFoodTagParams struct {
	MenuFoodID int64  `json:"menu_food_id"`
	FoodTag    string `json:"food_tag"`
}

func (q *Queries) GetMenuFoodTag(ctx context.Context, arg GetMenuFoodTagParams) (FoodTag, error) {
	row := q.db.QueryRowContext(ctx, getMenuFoodTag, arg.MenuFoodID, arg.FoodTag)
	var i FoodTag
	err := row.Scan(&i.ID, &i.MenuFoodID, &i.FoodTag)
	return i, err
}

const listMenuFoodTag = `-- name: ListMenuFoodTag :many
SELECT food_tag.food_tag FROM food_tag
WHERE menu_food_id = $1
`

func (q *Queries) ListMenuFoodTag(ctx context.Context, menuFoodID int64) ([]string, error) {
	rows, err := q.db.QueryContext(ctx, listMenuFoodTag, menuFoodID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []string{}
	for rows.Next() {
		var food_tag string
		if err := rows.Scan(&food_tag); err != nil {
			return nil, err
		}
		items = append(items, food_tag)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const removeMenuFoodTag = `-- name: RemoveMenuFoodTag :exec
DELETE FROM food_tag
WHERE menu_food_id = $1 AND food_tag = $2
`

type RemoveMenuFoodTagParams struct {
	MenuFoodID int64  `json:"menu_food_id"`
	FoodTag    string `json:"food_tag"`
}

func (q *Queries) RemoveMenuFoodTag(ctx context.Context, arg RemoveMenuFoodTagParams) error {
	_, err := q.db.ExecContext(ctx, removeMenuFoodTag, arg.MenuFoodID, arg.FoodTag)
	return err
}
